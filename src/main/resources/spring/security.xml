<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">


    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/voting" access="isAuthenticated()"/>
        <intercept-url pattern="/login" access="permitAll()"/>
        <intercept-url pattern="/logout" access="permitAll()"/>
        <intercept-url pattern="/logoutSuccessful" access="permitAll()"/>
        <intercept-url pattern="/**" access="permitAll()"/>
        <intercept-url pattern="/admin" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/restaurant" access="hasRole('ADMIN')"/>
        <access-denied-handler error-page="/403" />
        <form-login
                login-processing-url="/j_spring_security_check"
                login-page="/login"
                default-target-url="/"
                authentication-failure-url="/login?error=true"
                username-parameter="username"
                password-parameter="password" />
        <logout logout-url="/logout" logout-success-url="/logoutSuccessful" />
        <!--<remember-me/>-->
    </http>

    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT email, password, TRUE from users where email=?"
                               authorities-by-username-query="SELECT u.email, r.role FROM users u JOIN user_role r ON u.id = r.user_id WHERE u.email=?"/>
        </authentication-provider>
    </authentication-manager>
</beans:beans>